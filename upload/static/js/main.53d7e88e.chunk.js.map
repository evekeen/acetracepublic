{"version":3,"sources":["UploadPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["UploadPage","props","useState","uploadError","setUploadError","success","setSuccess","fileName","setFileName","storage","useMemo","getStorage","uploadEnabled","setUploadEnabled","onUpload","useCallback","undefined","files","document","querySelector","length","file","name","filename","parts","split","getExtension","toLowerCase","isVideo","metadata","contentType","type","storageRef","ref","user","uid","uploadBytesResumable","on","snapshot","err","console","log","code","message","UploadForm","Header","Title","displayName","SignOutButton","onClick","firebase","auth","signOut","FormContainer","FileChooser","onChange","id","style","display","FileChooserButton","FileName","Label","EmailInput","className","placeholder","required","defaultValue","email","UploadButton","enabled","ErrorMessage","styled","div","h2","label","span","a","input","p","uiConfig","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","tosUrl","privacyPolicyUrl","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ui","getAnalytics","firebaseui","AuthUI","MainWrapper","Button","App","setUser","signing","setSigning","error","setError","signIn","start","useEffect","onAuthStateChanged","isPendingRedirect","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.53d7e88e.chunk.js","sourcesContent":["import firebase from \"firebase/compat\";\nimport {useCallback, useMemo, useState} from \"react\";\nimport {getStorage, ref} from \"firebase/storage\";\nimport styled from \"@emotion/styled\";\nimport {uploadBytesResumable} from \"@firebase/storage\";\n\nexport const UploadPage = (props) => {\n  const [uploadError, setUploadError] = useState();\n  const [success, setSuccess] = useState();\n  const [fileName, setFileName] = useState();\n\n  const storage = useMemo(() => getStorage(), []);\n\n  const [uploadEnabled, setUploadEnabled ] = useState(false);\n\n  const onUpload = useCallback(() => {\n    setUploadError(undefined);\n    setSuccess(undefined);\n    const files = document.querySelector('#upload').files;\n    if (files.length > 0) {\n      const file = files[0];\n      const name = file.name;\n      if (!isVideo(name)) {\n        setUploadError(\"Please choose a video file\");\n        return;\n      }\n      const metadata = {contentType: file.type};\n      const storageRef = ref(storage, 'upload/' + props.user.uid + '/' + name);\n      const task = uploadBytesResumable(storageRef, file, metadata);\n\n      task.on('state_changed', snapshot => {\n        },\n        err => {\n          console.log('Could not upload the file', err);\n          switch (err.code) {\n            case 'storage/unauthorized':\n              setUploadError('Could not upload the file: permission denied');\n              break;\n            case 'storage/unauthenticated':\n              setUploadError('Could not upload the file, please sign in');\n              break;\n            case 'storage/quota-exceeded':\n              setUploadError(\"Could not upload the file, please try again later\");\n              break;\n            case 'storage/unknown':\n              setUploadError(err.message);\n              break;\n            default:\n              setUploadError(\"Could not upload the file, please try again later\");\n              break;\n          }\n          setSuccess(false);\n        },\n        () => {\n          console.log('Uploaded the file: ' + name);\n          setSuccess(true);\n        });\n    }\n\n  }, [props.user]);\n\n  const onChangeFile = () => {\n    const file = document.querySelector('#upload').files[0];\n    setFileName(file.name);\n    setUploadEnabled(document.querySelector('#upload').files.length > 0);\n  }\n\n  return (\n    <UploadForm>\n      <Header>\n        <Title>Welcome {props.user.displayName}</Title>\n        <SignOutButton onClick={() => void firebase.auth().signOut()}>Sign Out</SignOutButton>\n      </Header>\n      <FormContainer>\n        <FileChooser>\n          <input type=\"file\" onChange={onChangeFile} id=\"upload\" name=\"file\" style={{display: 'none'}}/>\n          <FileChooserButton>Choose video</FileChooserButton>\n          <FileName>{fileName}</FileName>\n        </FileChooser>\n        <Label>We need your email to send the Double Ace Trace video back</Label>\n        <EmailInput className=\"input is-medium\" type=\"text\" name=\"email\" placeholder=\"Email\" required defaultValue={props.user.email}/>\n        <UploadButton onClick={onUpload} enabled={uploadEnabled}>Upload</UploadButton>\n        {success && <p>Video has been successfully uploaded. We will send the double Ace Trace back to you soon!</p>}\n        {uploadError && <ErrorMessage>{uploadError}</ErrorMessage>}\n      </FormContainer>\n    </UploadForm>\n  );\n};\n\nfunction getExtension(filename) {\n  const parts = filename.split('.');\n  return parts[parts.length - 1];\n}\n\nfunction isVideo(filename) {\n  const ext = getExtension(filename);\n  switch (ext.toLowerCase()) {\n    case 'm4v':\n    case 'avi':\n    case 'mpg':\n    case 'mp4':\n    case 'mov':\n      return true;\n  }\n  return false;\n}\n\nconst Header = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 40px;\n`\n\nconst UploadForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  align-items: center;\n  text-align: left;\n`;\n\nconst FormContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nconst Title = styled.h2`\n  font-weight: 700;\n  ont-size: 2.5rem;\n  color: #FF8F48;\n  margin-right: 40px;  \n`;\n\nconst FileChooser = styled.label`\n  outline: none;  \n  text-align: left;\n  margin: 10px;\n`\n\nconst FileChooserButton = styled.span`\n  outline: none;\n  border-color: #FFCE5A;\n  background: linear-gradient(45deg, #FFCE5A, #FF8F48);\n  color: #fff;\n  transition: all 0.5s;\n  \n  border-radius: 500px;\n  cursor: pointer;\n  \n  font-size: 1rem;\n  font-weight: 600;\n  padding: 8px 16px 8px 16px;\n  width: min-content;\n  margin-right: 10px;\n`\n\nconst FileName = styled.span``;\n\nconst UploadButton = styled.a`\n  outline: none;\n  border-color: #FFCE5A;\n  background: ${props => props.enabled ? 'linear-gradient(45deg, #FFCE5A, #FF8F48);' : '#777;'}\n  color: #fff;\n  transition: all 0.5s;\n\n  border-radius: 500px;\n  cursor: ${props => props.enabled ? 'pointer;' : 'not-allowed;'}\n\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 8px 16px 8px 16px;\n  width: min-content;\n  margin: 10px;\n`\n\nconst SignOutButton = styled.div`\n  outline: none;\n  background: transparent;\n  color: #fff;\n  transition: all 0.5s;\n\n  border-radius: 500px;\n  border: 2px solid #999;\n  cursor: pointer;\n\n  font-size: 1rem;\n  font-weight: 600;\n  padding: 8px 16px 8px 16px;\n  height: 20px;\n`\n\nconst EmailInput = styled.input`\n  color: #878787;\n  box-shadow: none !important;\n  transition: all 0.8s;\n  padding-bottom: 3px;\n  background-color: #584D68;\n  border-color: #423751;\n  color: #dbdbdb;\n  box-shadow: inset 0 1px 2px rgb(10 10 10 / 10%);\n  width: 300px;\n\n  -webkit-appearance: none;\n  align-items: center;\n  border: 1;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  align-items: center;\n  border: 2px solid transparent;\n  border-radius: 10px;\n  box-shadow: none;\n  display: inline-flex;\n  height: 2.25em;\n  justify-content: flex-start;\n  line-height: 1.5;\n  padding: 5px;\n  position: relative;\n  vertical-align: top;\n  margin: 10px;\n\n  // States\n  &:focus,\n  &.is-focused,\n  &:active,\n  &.is-active {\n    outline: none;\n  }\n  &[disabled] {\n    cursor: not-allowed;\n   }\n`;\n\n\nconst Label = styled.p`\n`;\n\nconst ErrorMessage = styled.p`\n  color: #cf8162;\n  text-align: left;\n`\n","// Import the functions you need from the SDKs you need\nimport { getAnalytics } from \"firebase/analytics\";\n\nimport firebase from 'firebase/compat/app';\nimport * as firebaseui from 'firebaseui'\nimport 'firebaseui/dist/firebaseui.css'\nimport {useCallback, useEffect, useState} from \"react\";\nimport {UploadPage} from \"./UploadPage\";\nimport styled from \"@emotion/styled\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC8WLfWe86v7z6kGwrQFHgVNfeaMD-7Teo\",\n  authDomain: \"followflight-f0c00.firebaseapp.com\",\n  databaseURL: \"https://followflight-f0c00-default-rtdb.firebaseio.com\",\n  projectId: \"followflight-f0c00\",\n  storageBucket: \"followflight-f0c00.appspot.com\",\n  messagingSenderId: \"364337264488\",\n  appId: \"1:364337264488:web:2230e274aba6b5f41fc8dd\",\n  measurementId: \"G-0TBHKW45Z5\"\n};\n\nconst uiConfig = {\n  signInSuccessUrl: '/upload',\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.FacebookAuthProvider.PROVIDER_ID\n  ],\n  tosUrl: '/terms',\n  privacyPolicyUrl: '/privacy'\n};\n\nconst app = firebase.initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\n\nconst ui = new firebaseui.auth.AuthUI(firebase.auth())\n\nfunction App() {\n  const [user, setUser] = useState();\n  const [signing, setSigning] = useState(false);\n  const [error, setError] = useState();\n\n  const signIn = useCallback(() => {\n    setSigning(true);\n    ui.start('#firebaseui-auth-container', uiConfig);\n  }, [setSigning]);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      setUser(user);\n    }, err => setError(err.message));\n  }, [setUser, setError])\n\n  useEffect(() => {\n    if (ui.isPendingRedirect()) {\n      signIn();\n    }\n  }, [signIn]);\n\n  if (!!user && !error) {\n    return (\n      <MainWrapper>\n        <UploadPage user={user}/>\n      </MainWrapper>\n    );\n  }\n\n    return (\n      <MainWrapper>\n        <div id='firebaseui-auth-container'/>\n        {(!user && !signing || error) &&\n          <>\n            <p>Please, sign in to send the video</p>\n            <Button onClick={signIn}>Sign In</Button>\n            <p>{error}</p>\n          </>\n        }\n      </MainWrapper>\n    );\n}\n\nconst MainWrapper = styled.div`\n  font-family: 'Open Sans', sans-serif;\n  width: 100%;\n  height: calc(100vh - 24px);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n    \n  padding: 12px;\n  text-align: center;\n  background-color: #2c2536;\n  color: #fff;\n`;\n\nconst Button = styled.a`\n  outline: none;\n  border-color: #FFCE5A;\n  background: linear-gradient(45deg, #FFCE5A, #FF8F48);\n  color: #fff;\n  transition: all 0.5s;\n  \n  border-radius: 500px;\n  cursor: pointer;\n  \n  font-size: 1rem;\n  font-weight: 600;\n  padding: 8px 12px 8px 12px;\n  width: 120px;\n  margin: 10px;\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}